/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.DataManager;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import models.ColorModel;
import models.LineModel;
import models.ModelsModel;

/**
 *
 * @author Lau
 */
public class ConsultLinesView extends javax.swing.JFrame {

    DataManager datamanager = DataManager.getInstance();

    public ConsultLinesView() {
        initComponents();
        centerWindow();
        cargarTabla();
    }

    private void centerWindow() {
        // Obtener el tamaño de la pantalla
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();

        // Calcular las coordenadas para centrar la ventana
        int posX = (pantalla.width - this.getWidth()) / 2;
        int posY = (pantalla.height - this.getHeight()) / 2;

        // Establecer la ubicación de la ventana en el centro de la pantalla
        this.setLocation(posX, posY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        linesTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        pausarBtn = new javax.swing.JButton();
        reanudarBtn = new javax.swing.JButton();
        FinalizarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("Lineas");
        jLabel1.setToolTipText("");

        linesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Numero", "Estado", "Descripcion", "Modelo", "Color", "Supervisor"
            }
        ));
        linesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(linesTable);

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pausarBtn.setText("Pausar");
        pausarBtn.setEnabled(false);
        pausarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pausarBtnActionPerformed(evt);
            }
        });

        reanudarBtn.setText("Reanudar");
        reanudarBtn.setEnabled(false);
        reanudarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reanudarBtnActionPerformed(evt);
            }
        });

        FinalizarBtn.setText("Finalizar");
        FinalizarBtn.setEnabled(false);
        FinalizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pausarBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reanudarBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FinalizarBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(pausarBtn)
                    .addComponent(reanudarBtn)
                    .addComponent(FinalizarBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        pausarBtn.setEnabled(false);
        reanudarBtn.setEnabled(false);
        FinalizarBtn.setEnabled(false);
    }//GEN-LAST:event_jPanel1MouseClicked

    private void linesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linesTableMouseClicked
        consultLineState();
    }//GEN-LAST:event_linesTableMouseClicked

    private void pausarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pausarBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) linesTable.getModel();
        int selectedRow = linesTable.getSelectedRow();
        if (selectedRow != -1) {
            int nroLine = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
            datamanager.changeStateLine(nroLine, "Pausada");
        }
        cargarTabla();
    }//GEN-LAST:event_pausarBtnActionPerformed

    private void reanudarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reanudarBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) linesTable.getModel();
        int selectedRow = linesTable.getSelectedRow();
        if (selectedRow != -1) {
            int nroLine = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
            datamanager.changeStateLine(nroLine, "Iniciada");
        }
        cargarTabla();
    }//GEN-LAST:event_reanudarBtnActionPerformed

    private void FinalizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) linesTable.getModel();
        int selectedRow = linesTable.getSelectedRow();
        if (selectedRow != -1) {
            int nroLine = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
            datamanager.changeStateLine(nroLine, "Finalizada");
        }
        cargarTabla();
    }//GEN-LAST:event_FinalizarBtnActionPerformed

    private void consultLineState() {
        String tipoUsuario = datamanager.getUserLogin().getTipoUsuario();
        if (!tipoUsuario.equals("SUPERVISOR_DE_LINEA")) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) linesTable.getModel();
        int selectedRow = linesTable.getSelectedRow();

        if (selectedRow != -1) {
            String estado = (String) model.getValueAt(selectedRow, 1);
            if (estado.equals("Finalizada")) {
                pausarBtn.setEnabled(false);
                reanudarBtn.setEnabled(false);
                FinalizarBtn.setEnabled(false);
                return;
            }
            if (estado.equals("Iniciada")) {
                pausarBtn.setEnabled(true);
                reanudarBtn.setEnabled(false);
            }
            if (estado.equals("Pausada")) {
                pausarBtn.setEnabled(false);
                reanudarBtn.setEnabled(true);
            }
            if (!estado.equals("Finalizada")) {
                FinalizarBtn.setEnabled(true);
            }
        }
    }

    public void cargarTabla() {
        // Obtener el modelo de la tabla y convertirlo a DefaultTableModel
        DefaultTableModel tableModel = (DefaultTableModel) linesTable.getModel();

        // Limpiar cualquier fila existente en la tabla
        tableModel.setRowCount(0);

        // Recorrer la lista y agregar una fila para cada elemento
        for (LineModel line : datamanager.getLines()) {
            if (line.getOp() == null) {
                Object[] row = {
                    line.getNumero(),
                    line.getEstado(),
                    line.getDescripcion(),
                    "",
                    "",
                    ""
                };
                tableModel.addRow(row);
            } else {
                ModelsModel opModelo = line.getOp().getModelo();
                ColorModel opColor = line.getOp().getColor();
                Object[] row = {
                    line.getNumero(),
                    line.getEstado(),
                    line.getDescripcion(),
                    opModelo.getSKU() + " - " + opModelo.getDenominacion(),
                    opColor.getDescripcion() + " - " + opColor.getCodigo(),
                    line.getSupervisor().getApellidos() + " " + line.getSupervisor().getNombres()
                };
                tableModel.addRow(row);
            }
        }
        pausarBtn.setEnabled(false);
        reanudarBtn.setEnabled(false);
        FinalizarBtn.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FinalizarBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable linesTable;
    private javax.swing.JButton pausarBtn;
    private javax.swing.JButton reanudarBtn;
    // End of variables declaration//GEN-END:variables
}
